---
uti: com.xamarin.workbook
platform: Android
packages: []
---

```csharp
using Android.Widget;

var selectedView = GetObject<Android.Widget.FrameLayout> (0x3);
Button button = new Button(selectedView.Context);
button.Text = "Submit";
selectedView.AddView(button);
```

## Anonymous Delegate

```csharp
button.Click += delegate {
  Toast.MakeText(selectedView.Context, "You touched me!", ToastLength.Short).Show();
};
```

## Lambda Expression

```csharp
button.Click += (sender, ea) => {
  Toast.MakeText(selectedView.Context, "Handled by a Lambda", ToastLength.Short).Show();
};
```

## Assign a delegate method

```csharp
void HandleClick (object sender, EventArgs ea) {
  Toast.MakeText(selectedView.Context, "Handled by a delegate method", ToastLength.Short).Show();
}

button.Click += HandleClick;
```

In this last case we can also remove the handler like this:

```csharp
button.Click -= HandleClick;
```

Invoking a event for yourself, to setup a you'll need a bit boilerplate:

```csharp
public class Event
{
  public delegate void CustomEventHandler(object sender, EventArgs e);

  public event CustomEventHandler CustomEvent;

  public void InvokeEvent()
  {
    // Invoke the event from within the class that declared the event:
    CustomEvent(this, EventArgs.Empty);
  }
}
```

Then to "listen" to the event:

```csharp
var e = new Event();

e.CustomEvent += new Event.CustomEventHandler((sender, args) =>
  Toast.MakeText(selectedView.Context, "Fired by a custom event", ToastLength.Short).Show());
```

```csharp
e.InvokeEvent();
```

[Next Operator overloading](Operator.workbook)